name: Deploy to Heroku

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository with full history
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the entire history for Heroku

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # Adjust to your preferred Node.js version

      # Install frontend dependencies and build
      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      # Move the build directory to the backend
      - name: Move build to backend
        run: |
          rm -rf backend/build
          mv frontend/build backend/

      # Set Git user information explicitly for GitHub Actions
      - name: Configure Git user
        working-directory: ./backend
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Configure Git to push to Heroku using the main branch
      - name: Set up Heroku remote
        working-directory: ./backend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/project-3-01-beastmode.git

      # Deploy to Heroku by pushing to the main branch
      - name: Deploy to Heroku
        working-directory: ./backend
        run: |
          # Add, commit, and push changes to Heroku main
          git add .
          git commit -m "Deploying with new frontend build" || echo "No changes to commit"
          git push -f heroku main

      # Clean up frontend build directory if deployment succeeded
      - name: Cleanup frontend build
        if: success()
        run: rm -rf frontend/build
