name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js to version 22 or higher
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Navigate to the frontend directory, install dependencies, and build
      - name: Install frontend dependencies and build
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      # Move the build directory to the backend
      - name: Move build directory to backend
        run: |
          rm -rf backend/build
          mv frontend/build backend/

      # Set up Git in the backend directory if not already set up
      - name: Initialize Git in backend
        working-directory: ./backend
        run: |
          if [ ! -d ".git" ]; then
            git init
          fi

      # Set up Heroku remote and deploy
      - name: Deploy to Heroku
        working-directory: ./backend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          # Check if Heroku remote exists, add if missing
          heroku_remote=$(git remote | grep heroku)
          if [ -z "$heroku_remote" ]; then
            heroku git:remote -a project-3-01-beastmode
          fi

          # Stage and commit changes if there are any
          git add .
          if git diff --cached --quiet; then
            echo "Nothing to commit, skipping deployment."
          else
            git commit -m "Deploying with new frontend build"
            git push -f heroku master
          fi

      # Clean up frontend build directory if deployment succeeded
      - name: Cleanup frontend build
        if: success()
        run: rm -rf frontend/build
